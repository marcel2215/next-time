<div>
    <div class="flex justify-around p-1 bg-gray-100 rounded-xl border shadow-sm font-bold space-x-1">
        <button class="@GetButtonClass(IsOnSecondaryTab)" @onclick="SwitchTabAsync">@PrimaryTabTitle</button>
        <button class="@GetButtonClass(!IsOnSecondaryTab)" @onclick="SwitchTabAsync">@SecondaryTabTitle</button>
    </div>
</div>

@code {
    [Parameter]
    public string PrimaryTabTitle { get; set; } = "Primary";

    [Parameter]
    public string SecondaryTabTitle { get; set; } = "Secondary";

    [Parameter]
    public bool IsOnSecondaryTab { get; set; }

    [Parameter]
    public EventCallback<bool> IsOnSecondaryTabChanged { get; set; }

    private async Task SwitchTabAsync()
    {
        IsOnSecondaryTab = !IsOnSecondaryTab;
        await IsOnSecondaryTabChanged.InvokeAsync(IsOnSecondaryTab);
    }

    private string GetButtonClass(bool isOnTab)
    {
        return isOnTab ? "bg-white p-1 w-full active:scale-95 rounded-lg border shadow-sm transition-all ease-in-out duration-300" : "p-1 w-full active:scale-95 hover:bg-neutral-50 rounded-lg transition-all ease-in-out duration-300";
    }
}
 