@page "/new-meeting"
@inject NavigationManager NavigationManager
@inject MeetingManager MeetingManager

<PageTitle>NextTime - Create Meeting</PageTitle>

<div class="space-y-4">
    <h1 class="text-4xl font-bold">Create Meeting</h1>
    <NTTextBox Label="Title" Placeholder="My Super Party" @bind-Text="_meeting.Title" />
    <NTTextArea Label="Description" Placeholder="Here you can add more details about the event..." @bind-Text="_meeting.Description" />
    <div>
        <label class="pl-2 text-sm font-bold">Estimated Duration</label>
        <div class="mt-1 space-y-2">
            <NTCheckBox @bind-IsChecked="IsEstDuration1Hour">1 Hour</NTCheckBox>
            <NTCheckBox @bind-IsChecked="IsEstDuration2To3Hours">2-3 Hours</NTCheckBox>
            <NTCheckBox @bind-IsChecked="IsEstDuration4To6Hours">4-6 Hours</NTCheckBox>
            <NTCheckBox @bind-IsChecked="IsEstDuration6To8Hours">6-8 Hours</NTCheckBox>
            <NTCheckBox @bind-IsChecked="IsEstDuration8To12Hours">8-12 Hours</NTCheckBox>
            <NTCheckBox @bind-IsChecked="IsEstDurationEntireDay">Entire Day</NTCheckBox>
        </div>
    </div>
    <div class="flex space-x-4">
        <NTButton Clicked="NavigateToHomePage">Cancel</NTButton>
        <NTButton Style="ButtonStyle.Accent" Clicked="CreateMeetingAsync">Create</NTButton>
    </div>
</div>

@code {
    private readonly Meeting _meeting = new(Guid.Empty, string.Empty);

    [CascadingParameter]
    public required ApplicationUser User { get; init; }

    private bool IsEstDuration1Hour
    {
        get => _meeting.Duration == TimeSpan.FromHours(1);
        set => _meeting.Duration = value ? TimeSpan.FromHours(1) : _meeting.Duration;
    }

    private bool IsEstDuration2To3Hours
    {
        get => _meeting.Duration == TimeSpan.FromHours(3);
        set => _meeting.Duration = value ? TimeSpan.FromHours(3) : _meeting.Duration;
    }

    private bool IsEstDuration4To6Hours
    {
        get => _meeting.Duration == TimeSpan.FromHours(6);
        set => _meeting.Duration = value ? TimeSpan.FromHours(6) : _meeting.Duration;
    }

    private bool IsEstDuration6To8Hours
    {
        get => _meeting.Duration == TimeSpan.FromHours(8);
        set => _meeting.Duration = value ? TimeSpan.FromHours(8) : _meeting.Duration;
    }

    private bool IsEstDuration8To12Hours
    {
        get => _meeting.Duration == TimeSpan.FromHours(12);
        set => _meeting.Duration = value ? TimeSpan.FromHours(12) : _meeting.Duration;
    }

    private bool IsEstDurationEntireDay
    {
        get => _meeting.Duration == TimeSpan.FromDays(1);
        set => _meeting.Duration = value ? TimeSpan.FromDays(1) : _meeting.Duration;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _meeting.UserId = User.Id;
    }

    private void NavigateToHomePage()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task CreateMeetingAsync()
    {
        if (_meeting != null)
        {
            if (string.IsNullOrWhiteSpace(_meeting.Title))
            {
                _meeting.Title = "Untitled Meeting";
            }

            await MeetingManager.CreateAsync(_meeting);
            NavigationManager.NavigateTo($"/meetings/{_meeting.Code}");
        }
    }
}
